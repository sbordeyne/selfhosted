plugins:
  start-alpine-pod:
    shortCut: Ctrl-T
    confirm: true
    description: "Start an alpine:latest container here"
    scopes:
      - pods
      - deployments
    command: bash
    background: true
    args:
      - -c
      - |
        echo '{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"name": "alpine", "labels": {"app": "alpine", "debug": "1"}}, "spec": {"selector": {"matchLabels": {"app": "alpine"}}, "replicas": 1, "template": {"metadata": {"labels": {"app": "alpine", "debug": "1", "app.kubernetes.io/part-of": "happn", "sidecar.istio.io/inject": "false"}}, "spec": {"containers": [{"name": "alpine", "image": "alpine:latest", "imagePullPolicy": "Always", "securityContext": {"runAsUser": 0, "runAsGroup": 0}, "stdin": true, "tty": true, "stdinOnce": true, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "resources": {"requests": {"cpu": "100m", "memory": "100Mi"}, "limits": {"cpu": "100m", "memory": "100Mi"}}}], "restartPolicy": "Always"}}}}' | kubectl apply -f - --context $CONTEXT --namespace $NAMESPACE
  edit-secret:
    shortCut: Ctrl-X
    confirm: false
    description: Edit Decoded Secret
    scopes:
      - secrets
    command: sh
    background: false
    args:
      - -c
      - >-
        tempfile=$(mktemp);
        secret=$(kubectl get secrets --context $CONTEXT --namespace $NAMESPACE $NAME -o json);
        printf '%s\n' $secret | jq '.data | map_values(@base64d)' > $tempfile;
        vim $tempfile;
        secret_data=$(cat $tempfile | jq -c '. | map_values(@base64)');
        rm $tempfile;
        printf '%s\n' $secret | jq -r --argjson secret_data "$secret_data" '.data = $secret_data' | kubectl apply -f -;
  duplicate-pod:
    shortCut: Ctrl-B
    description: Duplicate Pod
    scopes:
      - po
    command: kubectl
    background: true
    args:
      - duplicate
      - pod
      - $NAME
      - -n
      - $NAMESPACE
      - --context
      - $CONTEXT
  duplicate-statefulset:
    shortCut: Ctrl-T
    description: Duplicate StatefulSet
    scopes:
      - statefulset
    command: kubectl
    background: true
    args:
      - duplicate
      - statefulset
      - $NAME
      - -n
      - $NAMESPACE
      - --context
      - $CONTEXT
  toggle-helmrelease:
    shortCut: Shift-T
    confirm: true
    scopes:
      - helmreleases
    description: Toggle to suspend or resume a HelmRelease
    command: bash
    background: false
    args:
      - -c
      - >-
        suspended=$(kubectl --context $CONTEXT get helmreleases -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1); verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend"); flux $verb helmrelease --context $CONTEXT -n $NAMESPACE $NAME | less -K
  toggle-kustomization:
    shortCut: Shift-T
    confirm: true
    scopes:
      - kustomizations
    description: Toggle to suspend or resume a Kustomization
    command: bash
    background: false
    args:
      - -c
      - >-
        suspended=$(kubectl --context $CONTEXT get kustomizations -n $NAMESPACE $NAME -o=custom-columns=TYPE:.spec.suspend | tail -1); verb=$([ $suspended = "true" ] && echo "resume" || echo "suspend"); flux $verb kustomization --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-git:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - gitrepositories
    command: bash
    background: false
    args:
      - -c
      - >-
        flux reconcile source git --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-hr:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - helmreleases
    command: bash
    background: false
    args:
      - -c
      - >-
        flux reconcile helmrelease --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-helm-repo:
    shortCut: Shift-Z
    description: Flux reconcile
    scopes:
      - helmrepositories
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - >-
        flux reconcile source helm --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-oci-repo:
    shortCut: Shift-Z
    description: Flux reconcile
    scopes:
      - ocirepositories
    command: bash
    background: false
    confirm: false
    args:
      - -c
      - >-
        flux reconcile source oci --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-ks:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - kustomizations
    command: bash
    background: false
    args:
      - -c
      - >-
        flux reconcile kustomization --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-ir:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - imagerepositories
    command: sh
    background: false
    args:
      - -c
      - >-
        flux reconcile image repository --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-iua:
    shortCut: Shift-R
    confirm: false
    description: Flux reconcile
    scopes:
      - imageupdateautomations
    command: sh
    background: false
    args:
      - -c
      - >-
        flux reconcile image update --context $CONTEXT -n $NAMESPACE $NAME | less -K
  reconcile-external-secret:
    shortCut: Shift-R
    confirm: false
    description: Reconcile ExternalSecret resources manually
    scopes:
      - externalsecrets
    command: sh
    background: false
    args: 
      - -c
      - >-
        kubectl --context $CONTEXT annotate externalsecret $NAME --namespace $NAMESPACE force-sync=$(date +%s) --overwrite
  # credits: https://github.com/fluxcd/flux2/discussions/2494
  get-suspended-helmreleases:
    shortCut: Shift-S
    confirm: false
    description: Suspended Helm Releases
    scopes:
      - helmrelease
    command: sh
    background: false
    args:
      - -c
      - >-
        kubectl get --context $CONTEXT --all-namespaces helmreleases.helm.toolkit.fluxcd.io -o json | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.namespace,.metadata.name,.spec.suspend] | @tsv' | less -K
  get-suspended-kustomizations:
    shortCut: Shift-S
    confirm: false
    description: Suspended Kustomizations
    scopes:
      - kustomizations
    command: sh
    background: false
    args:
      - -c
      - >-
        kubectl get --context $CONTEXT --all-namespaces kustomizations.kustomize.toolkit.fluxcd.io -o json | jq -r '.items[] | select(.spec.suspend==true) | [.metadata.name,.spec.suspend] | @tsv' | less -K
  helm-default-values:
    shortCut: Shift-V
    confirm: false
    description: Chart Default Values
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - >-
        revision=$(helm history -n $NAMESPACE --kube-context $CONTEXT $COL-NAME | grep deployed | cut -d$'\t' -f1 | tr -d ' \t'); kubectl get secrets --context $CONTEXT -n $NAMESPACE sh.helm.release.v1.$COL-NAME.v$revision -o yaml | yq e '.data.release' - | base64 -d | base64 -d | gunzip | jq -r '.chart.values' | yq -P | less -K
  helm-values:
    shortCut: v
    confirm: false
    description: Values
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - "helm get values $COL-NAME -n $NAMESPACE --kube-context $CONTEXT | less -K"
  # Suspends/Resumes a cronjob
  toggleCronjob:
    shortCut: Ctrl-O
    confirm: true
    dangerous: true
    scopes:
      - cj
    description: Toggle to suspend or resume a running cronjob
    command: kubectl
    background: true
    args:
      - patch
      - cronjobs
      - $NAME
      - -n
      - $NAMESPACE
      - --context
      - $CONTEXT
      - -p
      - '{"spec" : {"suspend" : $!COL-SUSPEND }}'
  remove_finalizers:
    shortCut: Ctrl-F
    confirm: true
    dangerous: true
    scopes:
      - all
    description: |
      Removes all finalizers from selected resource. Be careful when using it,
      it may leave dangling resources or delete them
    command: kubectl
    background: true
    args:
      - patch
      - --context
      - $CONTEXT
      - --namespace
      - $NAMESPACE
      - $RESOURCE_NAME.$RESOURCE_GROUP
      - $NAME
      - -p
      - '{"metadata":{"finalizers":null}}'
      - --type
      - merge
  # remove finalizers from a stuck namespace
  watch-events:
    shortCut: Shift-E
    confirm: false
    description: Get Events
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - "watch -n 5 kubectl get events --context $CONTEXT --namespace $NAMESPACE --field-selector involvedObject.name=$NAME"
