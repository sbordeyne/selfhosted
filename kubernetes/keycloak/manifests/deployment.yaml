apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      containers:
      - name:  keycloak
        image:  keycloak
        imagePullPolicy: Always
        args:
          - start --optimized --hostname-strict=false
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 1Gi
        env:
          - name: KC_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: keycloak-db-app
                key: username
          - name: KC_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-db-app
                key: password
          - name: KC_DB_URL_DATABASE
            value: keycloak
          - name: KC_DB_URL_HOST
            value: keycloak-db-rw
          - name: KC_DB_URL_PORT
            value: "5432"
          - name: KC_DB_URL
            value: jdbc:postgresql://keycloak-db-rw:5432/keycloak
          - name: KC_HOSTNAME
            value: login.slfhst.io
          - name: KC_PROXY
            value: edge
          - name: KC_HTTPS_CERTIFICATE_FILE
            value: /certs/tls.crt
          - name: KC_HTTPS_CERTIFICATE_KEY_FILE
            value: /certs/tls.key
          - name: KC_CACHE
            value: local
          - name: KC_DB
            value: postgres
          - name: KC_TRANSACTION_XA_ENABLED
            value: "true"
          - name: KC_HEALTH_ENABLED
            value: "true"
          - name: KC_METRICS_ENABLED
            value: "true"
          - name: KC_HTTP_ENABLED
            value: "true"
        envFrom:
          - secretRef:
              name: keycloak-admin-user
        ports:
        - containerPort:  8080
          name:  http
        - containerPort: 8443
          name:  https
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 240
          timeoutSeconds: 600
        volumeMounts:
          - mountPath: /certs/tls.key
            name: certs
            subPath: tls.key
          - mountPath: /certs/tls.crt
            name: certs
            subPath: tls.crt
      restartPolicy: Always
      volumes:
        - name:  certs
          secret:
            secretName:  keycloak-tls
