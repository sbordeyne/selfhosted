apiVersion: apps/v1
kind: Deployment
metadata:
  name:  prowlarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prowlarr
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name:  prowlarr
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 1000
      containers:
      - name: prowlarr-exportarr
        image: exportarr
        imagePullPolicy: IfNotPresent
        args: [prowlarr]
        livenessProbe:
          httpGet:
            path: /healthz
            port: exportarr
          failureThreshold: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: exportarr
          failureThreshold: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
          limits:
            cpu: 20m
            memory: 40Mi
        envFrom:
        - configMapRef:
            name:  exportarr-env
        ports:
        - containerPort:  9707
          name:  exportarr
        volumeMounts:
        - name: config
          mountPath: /config
      - name:  prowlarr
        image:  prowlarr
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
          limits:
            cpu: 100m
            memory: 200Mi
        envFrom:
        - configMapRef:
            name:  prowlarr-env
        ports:
        - containerPort:  9696
          name:  prowlarr
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr-config
      restartPolicy: Always
