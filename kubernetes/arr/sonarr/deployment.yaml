apiVersion: apps/v1
kind: Deployment
metadata:
  name:  sonarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      containers:
      - image: sonarr
        name: sonarr
        resources:
          limits:
            cpu: "100m"
            memory: "256M"
          requests:
            cpu: "20m"
            memory: "55M"
        envFrom:
          - configMapRef:
              name: sonarr-env
              optional: false
        ports:
        - containerPort:  8989
          name:  sonarr
        volumeMounts:
        - mountPath: /media
          name: media
        - mountPath: /config
          name: config
      - name: sonarr-exportarr
        image: exportarr
        imagePullPolicy: IfNotPresent
        args: [sonarr]
        livenessProbe:
          httpGet:
            path: /healthz
            port: exportarr
          failureThreshold: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: exportarr
          failureThreshold: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
          limits:
            cpu: 20m
            memory: 40Mi
        envFrom:
        - configMapRef:
            name:  sonarr-exportarr-env
        ports:
        - containerPort:  9707
          name:  exportarr
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
        - name: media
          nfs:
            path: /tank/media
            server: "192.168.1.42"
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
