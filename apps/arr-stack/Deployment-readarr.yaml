apiVersion: apps/v1
kind: Deployment
metadata:
  name:  readarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: readarr
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: readarr
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      serviceAccountName: readarr
      initContainers:
        - name: init-readarr
          image: busybox
          command: ["sh"]
          args:
            - -c
            - cp -f /cfg/config.xml /config/config.xml
          volumeMounts:
            - name: config
              mountPath: /cfg/config.xml
              subPath: config.xml
            - name: config-pvc
              mountPath: /config
      containers:
        - image: readarr
          name: readarr
          resources:
            limits:
              cpu: "100m"
              memory: "256M"
            requests:
              cpu: "20m"
              memory: "55M"
          env:
            - name: TZ
              value: "Europe/Paris"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort:  8787
              name:  readarr
          volumeMounts:
            - mountPath: /media
              name: media
            - mountPath: /config
              name: config-pvc
        - name: exportarr
          image: exportarr
          imagePullPolicy: IfNotPresent
          args: [readarr]
          livenessProbe:
            httpGet:
              path: /healthz
              port: exportarr
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: exportarr
            failureThreshold: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              cpu: 20m
              memory: 40Mi
          env:
            - name: PORT
              value: "9707"
            - name: URL
              value: "http://readarr:8787"
            - name: CONFIG
              value: "/config/config.xml"
            - name: DISABLE_SSL_VERIFY
              value: "true"

          ports:
            - containerPort:  9707
              name:  exportarr
          volumeMounts:
            - name: config
              mountPath: /config/config.xml
              subPath: config.xml

      volumes:
        - name: media
          nfs:
            path: /tank/media
            server: "192.168.1.42"
        - name: config-pvc
          persistentVolumeClaim:
            claimName: readarr-config
        - name: config
          secret:
            secretName: readarr-config
